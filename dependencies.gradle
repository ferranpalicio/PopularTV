ext {
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28

    kotlinVersion = '1.3.31'

    jetpackVersion = '1.0.0'
    ktxVersion = '1.0.1'
    constraintLayoutVersion = '1.1.3'

    lifecycleVersion = '2.1.0-beta01'

    retrofitVersion = '2.4.0'
    loggingInterceptorVersion = '3.10.0'
    gsonVersion = '2.3.0'
    coroutinesAdapterVersion = '0.9.2'

    picassoVersion = '2.5.2'

    daggerVersion = '2.21'

    kotlinCoroutines = '1.2.1'

    junitVersion = '4.12'
    mockitoKotlinVersion = '2.1.0'
    archCoreTestingVersion = '2.0.1'


    libraries = [kotlinStdLib           : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
                 appCompat              : "androidx.appcompat:appcompat:$jetpackVersion",
                 constraintLayout       : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
                 ktxCore                : "androidx.core:core-ktx:$ktxVersion",
                 fragment               : "androidx.fragment:fragment-ktx:$jetpackVersion",
                 material               : "com.google.android.material:material:$jetpackVersion",
                 lifecycle              : "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
                 viewmodel              : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",

                 retrofit               : "com.squareup.retrofit2:retrofit:$retrofitVersion",
                 loggingInterceptor     : "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion",
                 gson                   : "com.squareup.retrofit2:converter-gson:$gsonVersion",
                 coroutinesAdapter      : "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutinesAdapterVersion",

                 picasso                : "com.squareup.picasso:picasso:$picassoVersion",

                 dagger                 : "com.google.dagger:dagger:$daggerVersion",
                 daggerCompiler         : "com.google.dagger:dagger-compiler:$daggerVersion",

                 kotlinCoroutines       : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines",
                 kotlinCoroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutines"
    ]

    testLibraries = [junit          : "junit:junit:$junitVersion",
                     mockitoKotlin  : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion",
                     archCoreTesting: "androidx.arch.core:core-testing:$archCoreTestingVersion",
                     coroutinesTest : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutines"
    ]

}